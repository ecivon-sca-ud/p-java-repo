//For Main.java
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner customerTypes= new Scanner(System.in);
        String oGPassword="123";
        String woodType,password;
        System.out.println("Enter password required for access to table-making services.");
        password=customerTypes.nextLine();
        if(password.compareTo(oGPassword)==0) {
            System.out.println("Welcome to Antique Furniture Kenya Limited!");
            System.out.println("What kind of wood should your table(s) be?");
            System.out.println("You may choose from mahogany(starting at sh45500),\nor oak(starting at sh.44515 ),\nor pine (starting at sh.42500).");
            woodType=customerTypes.nextLine();
            Table zerothTable= new Table(woodType) {@Override
                public void woodPrice() {
                }
            };
        }
        else {
            System.out.println("Sorry, incorrect.Try again.");
        }
    }
}


//For Table.java
import java.util.Scanner;

public abstract class Table {
    private double tableCost=42500;
    private double initialArea=9600;
    private double drawerCost;
    private String userPreference;
    private double tableLength,tableWidth;
    private int drawerNumber;
    private String woodChoix;
    Table() {
    }
    Table(String woodChoix) {
        System.out.println("About this chosen table...\nIts default cost is sh. "+tableCost);
        System.out.println("But this will first vary with the size you wish for the table.");

        //First section modifies table's price with respect to area...
        System.out.println("If you want the default (120x80) squared cm size, type \"yes\", else type \"no\".");
        Scanner userDesires= new Scanner(System.in);
        userPreference=userDesires.nextLine();


        if(userPreference.equalsIgnoreCase("Yes")) {
            System.out.println("Aight so default cost of sh. "+tableCost+" remains true for you.");
            tableLength=120;
            tableWidth=80;
        }

        else if(userPreference.equalsIgnoreCase("No")) {
            System.out.println("New size huh?Okay, enter new desired length.");
            tableLength=userDesires.nextInt();
            System.out.println("Now enter new desired width.");
            tableWidth=userDesires.nextInt();
            System.out.println("Table's new area = "+ (tableLength*tableWidth) +" squared cm.");
            System.out.println("Each extra square cm to table's area adds sh.825 to final cost.");
            tableCost=( tableCost + ( ( (tableLength*tableWidth) - (initialArea) ) * 825) );
            System.out.println("Your table's cost now stands at sh." +tableCost);
            userDesires.nextLine();
        }

        else {
            System.out.println("Type yes or no ONLY,please!!");
        }
        //End of area problems.

        //Now let's get how many drawers this person wants if any.
        System.out.println("Price also varies based on number of drawers.\nSo, you know, let's jump to drawer problems now...");
        System.out.println("Would you want drawers or not?");
        System.out.println("Once again,type \"yes\" if you do, else type \"no\" if you don't.");
        userPreference=userDesires.nextLine();

        if(userPreference.equalsIgnoreCase("Yes")) {
            System.out.println("Nice! First drawer is sh.2500, while the other 5 permitted ones are sh.2000 each.");
            System.out.println("Aight, how many drawers would you like?\n(NB:Strictly no more than six,please.)");
            drawerNumber= userDesires.nextInt();
            if(drawerNumber>0 && drawerNumber<7) {
                drawerCost=((2500) + ( (drawerNumber-1) * 2000) );
                System.out.println("Total drawer cost= sh. " + drawerCost );
                tableCost = tableCost + drawerCost;
            }
            else {
                System.out.println("We said maximum was 6,did we not?");
            }
        }

        else if(userPreference.equalsIgnoreCase("No")) {
            System.out.println("No drawers,huh? No problem.\nInvoice time!");
        }

        else {
            System.out.println("Type yes or no ONLY,please!!");
        }
        //We're done with drawers. Now to see final price.

        System.out.println("Given table length of "+tableLength + " cm...");
        System.out.println("...and width of "+ tableWidth + " cm...");
        System.out.println("...and number of drawers chosen=  "+drawerNumber);
        System.out.println("...your table (without considering wood type) is now sh. "+tableCost);

        this.woodChoix=woodChoix;
        if(this.woodChoix.equalsIgnoreCase("Mahogany")) {
            MahoganyTable expensiveTable= new MahoganyTable(woodChoix,tableLength,tableWidth,drawerNumber,tableCost);
        }

        else if(this.woodChoix.equalsIgnoreCase("Oak")) {
            OakTable oakTable1= new OakTable(woodChoix,tableLength,tableWidth,drawerNumber,tableCost);
        }

        else if(this.woodChoix.equalsIgnoreCase("Pine")) {
            PineTable cheapTable= new PineTable(woodChoix,tableLength,tableWidth,drawerNumber,tableCost);
        }

        else{
            System.out.println("Something's wrong, I can feel it...");
        }
    }
    public abstract void woodPrice();
}


//For MahoganyTable.java
import java.util.*;
public class MahoganyTable extends Table {
    private String userPreference;
    private double initialArea=9600;
    private double tableLength,tableWidth;
    private int drawerNumber,tableNumber;
    private double drawerCost;
    private double tableCost;
    private double tableIncrement=3000;

    private double discount=0.05;
    MahoganyTable() {
        System.out.println("About this mahogany table...");
    }
    MahoganyTable(String userPreference,double tableLength,double tableWidth, int drawerNumber,double tableCost) {

        this.userPreference=userPreference;
        this.tableCost=tableCost;
        woodPrice();
        System.out.println("Table's final cost, seeing as it being mahogany makes it sh.3000 more is sh. : "+this.tableCost);
        System.out.println("Now, do you want just one of these tables or more? Type number desired");
        Scanner userDesires= new Scanner(System.in);
        tableNumber=userDesires.nextInt();
        if(tableNumber==1) {
            System.out.println("Aight so total remains sh. "+this.tableCost);
            new InvoiceFrame(userPreference,tableLength,tableWidth,drawerNumber,tableNumber,discount,this.tableCost);
        }
        else if(tableNumber>1) {
            System.out.println("Aight so total would've been sh. " + (this.tableCost*tableNumber));
            System.out.println("Now, however,it's with a 5% discount, making it sh. "+(this.tableCost*tableNumber*0.95));
            new InvoiceFrame(userPreference,tableLength,tableWidth,drawerNumber,tableNumber,discount,(this.tableCost*tableNumber*0.95));
        }
        else {
            System.out.println("Please review input-can't be zero or negative number!");
        }
    }
    @Override
    public void woodPrice() {
        this.tableCost=tableCost+tableIncrement;
    }
}


//For OakTable.java
import java.util.*;
public class OakTable extends Table {

    private String userPreference;
    private double initialArea=9600;
    private double tableLength,tableWidth;
    private int drawerNumber,tableNumber;
    private double drawerCost;
    private double tableCost;
    private double tableIncrement=2015;
    private double discount=0.05;

    OakTable() {

    }
    OakTable(String userPreference,double tableLength,double tableWidth, int drawerNumber,double tableCost) {
        this.userPreference=userPreference;
        this.tableCost=tableCost;
        woodPrice();
        System.out.println("Table's final cost, seeing as it being oak makes it sh.2015 more is sh. : "+this.tableCost);
        System.out.println("Now, do you want just one of these tables or more? Type number desired");
        Scanner userDesires= new Scanner(System.in);
        tableNumber=userDesires.nextInt();
        if(tableNumber==1) {
            System.out.println("Aight so total remains sh. "+this.tableCost);
            new InvoiceFrame(userPreference,tableLength,tableWidth,drawerNumber,tableNumber,discount,this.tableCost);
        }
        else if(tableNumber>1) {
            System.out.println("Aight so total would've been sh. " + (this.tableCost*tableNumber));
            System.out.println("Now, however,it's with a 5% discount, making it sh. "+(this.tableCost*tableNumber*0.95));
            new InvoiceFrame(userPreference,tableLength,tableWidth,drawerNumber,tableNumber,discount,(this.tableCost*tableNumber*0.95));
        }
        else {
            System.out.println("Please review input-can't be zero or negative number!");
        }
    }
    @Override
    public void woodPrice() {
        this.tableCost=tableCost+tableIncrement;
    }
}

//For PineTable.java
import java.util.*;
public class PineTable extends Table {

    private double tableLength,tableWidth;
    private int drawerNumber,tableNumber;
    private double drawerCost;
    private double tableCost=42500;
    private double initialArea=9600;
    private double discount=0;

    private String userPreference;

    PineTable() {

    }
    PineTable(String userPreference,double tableLength,double tableWidth, int drawerNumber,double tableCost) {
        this.userPreference=userPreference;
        this.tableCost=tableCost;
        woodPrice();
        System.out.println("Lucky for you, this is pine so no increment. Cost remains sh. "+this.tableCost);
        System.out.println("Now, do you want just one of these tables or more? Type number desired");
        Scanner userDesires= new Scanner(System.in);
        tableNumber=userDesires.nextInt();
        if(tableNumber==1) {
            System.out.println("Aight so total remains sh. "+this.tableCost);
            new InvoiceFrame(userPreference,tableLength,tableWidth,drawerNumber,tableNumber,discount,this.tableCost);
        }
        else if(tableNumber>1) {
            System.out.println("Aight so total would've been sh. " + (this.tableCost*tableNumber));
            System.out.println("Now, however,it's with a 5% discount, making it sh. "+(this.tableCost*tableNumber*0.95));
            new InvoiceFrame(userPreference,tableLength,tableWidth,drawerNumber,tableNumber,discount,(this.tableCost*tableNumber*0.95));
        }
        else {
            System.out.println("Please review input-can't be zero or negative number!");
        }
    }
    @Override
    public void woodPrice() {
        this.tableCost=tableCost;
    }
}


//For InvoiceFrame.java
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class InvoiceFrame extends JFrame implements ActionListener {
    private String woodType;
    private double tableLength,tableWidth,discount,tablePrice;
    private int drawerNumber,tableNumber;
    JLabel label1,label2,label3,label4,label5,label6,label7;
    JTextField slot1,slot2,slot3,slot4,slot5,slot6;
    JButton button1;

    InvoiceFrame() {

    }
    InvoiceFrame(String woodType,double tableLength,double tableWidth,int drawerNumber,int tableNumber,double discount,double tablePrice) {
        if(tableNumber==1) {
            discount=0;
        }

        if(tableLength==0 && tableWidth==0) {
            tableLength=120;
            tableWidth=80;
        }

        this.woodType=woodType;
        this.tableLength=tableLength;
        this.tableWidth=tableWidth;
        this.drawerNumber=drawerNumber;
        this.tableNumber=tableNumber;
        this.discount=discount;
        this.tablePrice=tablePrice;

        this.setTitle("Final Invoice For Tables");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLayout(new GridLayout(7,2));
        this.setSize(600,600);

        label1= new JLabel("WOOD TYPE?");
        label2= new JLabel("LENGTH");
        label3= new JLabel("WIDTH");
        label4= new JLabel("NUMBER OF DRAWERS");
        label5= new JLabel("NUMBER OF TABLES");
        label6= new JLabel("DISCOUNT");
        label7= new JLabel("TOTAL PRICE");

        slot1= new JTextField();
        slot2= new JTextField();
        slot3= new JTextField();
        slot4= new JTextField();
        slot5= new JTextField();
        slot6= new JTextField();

        button1= new JButton("Click to Get Report");
        button1.addActionListener(this);

        this.add(label1);
        this.add(button1);
        this.add(label2);
        this.add(slot1);
        this.add(label3);
        this.add(slot2);
        this.add(label4);
        this.add(slot3);
        this.add(label5);
        this.add(slot4);
        this.add(label6);
        this.add(slot5);
        this.add(label7);
        this.add(slot6);
        this.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==button1) {
            label1.setText("WOOD TYPE :"+woodType.toUpperCase());
            slot1.setText(" " +tableLength);
            slot2.setText(""+tableWidth);
            slot3.setText(""+drawerNumber);
            slot4.setText(""+tableNumber);
            slot5.setText(""+discount);
            slot6.setText(""+tablePrice);
        }
    }
}
